name: build
on:
  workflow_dispatch:
  schedule:
    # Run nightly (* is a special character in YAML, so quote the string)
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: windows-2022

    steps:
    - name: Checkout neovim
      uses: actions/checkout@v2
      with:
        repository: neovim/neovim
        path: repo

    - name: Build
      shell: cmd
      run: |
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
        cd repo
        mkdir .deps
        cd .deps
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Release ..\cmake.deps
        cmake --build .
        cd ..
        mkdir build
        cd build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=..\..\Neovim ..
        cmake --build .
        ninja
        ninja install

    - name: Zip
      shell: powershell
      run: Compress-Archive Neovim nvim-win64.zip

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: nvim-win64
        path: nvim-win64.zip

  release:
    needs: build

    runs-on: ubuntu-latest

    steps:
    - name: Create timestamp
      id: timestamp
      shell: powershell
      run: |
        $timestamp = Get-Date -Format o | ForEach-Object { $_ -replace ":", "." }
        echo "timestamp=$timestamp" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: nightly-${{ env.timestamp }}
        release_name: nightly-${{ env.timestamp }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./nvim-win64.zip
        asset_name: nvim-win64.zip
        asset_content_type: application/zip
